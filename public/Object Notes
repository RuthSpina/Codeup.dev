everything in javascript is an object

variables are considered properties
functions are considered methods


var numberPrimitive = 1; **shown as number
var numberObject = new Number(1);    ****number is a class/object in js

console.log(typeof numberPrimitive);           // number
console.log(typeof numberObject);              // object
console.log(numberPrimitive === numberObject); // false (values are equal, types are different)


how to start an object:

var car = new object();
car.make = 'Toyota';
console.log(car.make);
var car = {};    *this is an object

car.honk = function(){
    alert('we honk');
};

car.honk();
result: alert 'we honk'.



console.log(car);
object{make: toyota, model: camry, honk: function}
^
|
shows the object

Two ways to set a property:

car.tires = '4';
or
car['tires'] = 4;



How you can call it:

car.honk2();
and
car['honk2']();



shift return in colsole allows you to write within the same line.

HOw to start an object: create an instance of object to alter.
-instancize-
var car = new object();
or
var car = {};

did you set something equal to new object.




JSON notation
used in APIs, and used in cloud based services. Its in a data-interchange format.

this is what notation type can pass:

A quoted string
A number
An object
An array
true or false
null


you start with and object {}
you can have objects within an array

* ends with commas

In javascript:

var test = {};///starts an object

test.stringProp = "stringValue";

in json is:

var test = {
    "stringProp": "stringValue",
    "numberProp": 1

};

*Don't put a comma on the last property because it causes problems in IE browsers.










